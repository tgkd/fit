---
description: >
  Configuration for code generation in an Expo-based React Native project,
  with strict guidelines on dependencies, styling, internationalization,
  charting, and health-data integration.
globs:
  alwaysApply: true
---
## Framework
- Project uses **Expo**.

## Dependencies
- Prefer existing packages from **package.json**.
- If you need a new package, ask before adding.

## Styling
- **Do not** hard-code `fontSize` in your styles.
- Always render text via `<ThemedText>`.

## Internationalization
- Every string must come from the i18n layer.
- Define new keys in **i18n.ts**, then reference them in your components.

## Charts
- Use **victory-native** for all charting.
- See examples in the [victory-native-xl repo](https://github.com/FormidableLabs/victory-native-xl/tree/main/example).

## Health Data
- Data provider: **Apple Health**.
- Adhere to the schema in
  `react-native-healthkit/src/native-types.ts`
  ([native-types.ts](https://github.com/kingstinct/react-native-healthkit/blob/master/src/native-types.ts)).

## Compilation & Linting
- To verify code compiles and adheres to style rules, run:
  ```bash
  yarn run lint
```

## Response Formatting
- **Never** insert progress comments (e.g., “Loading…”, “Processing…”).
- **Never** include trivial or obvious comments (e.g., `// Color based on performance`).
- Provide **only** high-level explanations of functions; omit internal or step-by-step logs.
